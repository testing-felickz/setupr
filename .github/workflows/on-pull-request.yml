on:
    pull_request:
        types: [opened, synchronize, reopened]

name: on-pull-request

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:

      - name: "Check out"
        uses: actions/checkout@v3

      - name: "Set up the environment"
        uses: ./.github/workflows/setup-poetry-env

      - name: "Install Task"
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GH_TOKEN }}
          version: 3.x

      - name: "Run checks"
        uses: ./.github/workflows/run-checks

  matrix:
    runs-on: ubuntu-latest
    needs: quality
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: "Setup Python version"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Set up the environment"
        uses: ./.github/workflows/setup-poetry-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Setup GnuPG"
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: "Test with pytest-cov"
        run: |
          mkdir -p ./artifacts
          source .venv/bin/activate
          pytest \
            --slow \
            --junitxml=./artifacts/pytest-${{ matrix.python-version }}.xml \
            --cov-report=term-missing \
            --cov=setupr \
            --cov=tests \
            tests/ \
            | tee ./artifacts/pytest-${{ matrix.python-version }}.txt
      - name: "Upload pytest test results"
        uses: actions/upload-artifact@v3
        with:
          name: pytest-coverage-${{ matrix.python-version }}
          path: ./artifacts/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  coverage:
    runs-on: ubuntu-latest
    needs: matrix
    steps:
      - name: "Check out"
        uses: actions/checkout@v3

      - uses: actions/download-artifact@master
        with:
          name: pytest-coverage-3.10
          path: ./artifacts/

      - name: "Pytest coverage comment"
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: artifacts/pytest-3.10.txt
          junitxml-path: artifacts/pytest-3.10.xml

      # This produced rubbish results, with coverage at 103.25% and lots of gaps.
      # The genthtml procude sensible results on my local machine so the action
      # might be at fault… ¯\_(ツ)_/¯
      #
      # - name: "Reporting test coverage"
      #   uses: romeovs/lcov-reporter-action@v0.3.1
      #   with:
      #     lcov-file: ./artifacts/coverage-3.10.lcov
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     delete-old-comments: true
