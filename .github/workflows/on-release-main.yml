# on:
#   release:
#     types: [published]
#     branches: [main]

on: workflow_dispatch

name: release-main

jobs:

  quality:
    runs-on: ubuntu-latest
    steps:

      - name: "Check out"
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/workflows/setup-poetry-env

      - name: "Install Task"
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: "Run checks"
        uses: ./.github/workflows/run-checks

  tox:
    needs: quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - name: "Check out"
        uses: actions/checkout@v3

      - name: "Set up the environment"
        uses: ./.github/workflows/setup-poetry-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Test with tox"
        run: |
          source .venv/bin/activate
          poetry add "tox-gh-actions==v2.9.1"
          tox

  release:
    # https://github.com/relekang/python-semantic-release/issues/311
    needs: tox
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      packages: write
      statuses: write

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT }}

    - name: "Python Semantic Release"
      uses: relekang/python-semantic-release@v7.31.4
      with:
        github_token: ${{ secrets.PAT }}
        REPOSITORY_USERNAME: __token__
        REPOSITORY_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

    # - name: "Set up the environment"
    #   uses: ./.github/workflows/setup-poetry-env
    #   with:
    #     python-version: 3.10

    # - name: "Poetry builds the package"
    #   run: |
    #     source .venv/bin/activate
    #     poetry build --verbose

    # # Official docss! https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

    # - name: "Publish distribution package to Test PyPI"
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/

    # - name: "Publish distribution package to PyPI"
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.PYPI_API_TOKEN }}
