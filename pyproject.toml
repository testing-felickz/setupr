[tool.poetry]
name = "drakkar"
version = "0.1.0"
description = "Drakkar ships the Worldr infrastructure."
authors = ["Dr Yann Golanski <fyg@worldr.com>"]
repository = "https://github.com/worldr/drakkar"
documentation = "https://worldr.github.io/drakkar/"
readme = "README.md"
packages = [
  {include = "drakkar"}
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
rich = "^12.4.4"
click = "^8.1.3"
click-help-colors = "^0.9.1"
python-gnupg = "^0.4.9"
requests = "^2.28.1"
pendulum = "^2.1.2"
plumbum = "^1.7.2"
sha256sum = "^2022.6.11"
semver = ">=2.10,<3"
structlog = "^22.1.0"


[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
pytest = "^7.1.1"
mkdocs = "^1.3.0"
mkdocs-material = "^8.3.9"
mkdocstrings = {extras = ["python"], version = "^0.19.0"}
mypy = "^0.961"
pre-commit = "^2.20.0"
pdbpp = "^0.10.3"
coverage = {extras = ["toml"], version = "^6.4.1"}
pytest-sugar = "^0.9.5"
types-requests = "^2.28.2"
requests-mock = "^1.9.3"
bandit = "^1.7.4"
pytest-skip-slow = "^0.0.3"
radon = "^5.1.0"
commitizen = "^2.28.1"
python-semantic-release = "7.29.7"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
include = '\.pyi?$'
target-version = ['py310']
fast = true
exclude = '''
(
  /(                        # exclude a few common directories in the
    \.git                   # root of the project
    | \.pytest_cache
    | python-venv
    | \.venv
    | build
    | dist
    | \.tox
  ))
'''

[tool.isort]
profile = "black"
line_length = 79
known_third_party = ["click", "click_help_colors", "gnupg", "pendulum", "plumbum", "pytest", "requests", "requests_mock", "rich", "semver", "sha256sum", "structlog"]

[tool.mypy]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = [
    '\.venv',
    'tests'
]

[tool.poetry.scripts]
drakkar = "drakkar.console:main"

[scripts]
drakkar = "drakkar.console:main"

[tool.pytest.ini_options]
log_auto_indent = true

#log_cli = true
#log_cli_level = "ERROR"
#log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
#log_cli_date_format = "%Y-%m-%d %H:%M:%S"

log_file = "pytest.log"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"

junit_duration_report = "total"
addopts = "-ra -q --junit-xml=pytest.xml --last-failed "

[tool.coverage.run]
parallel = true
branch = true

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
